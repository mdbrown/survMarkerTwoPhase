data_table <- ggplot(mdat, aes(x = factor(variable), y = factor(method),
label = format(round(mean,3), nsmall = 1), colour = factor(method))) +
geom_text(size = 3.5) + theme_bw()  +
theme(panel.grid.major = element_blank(), legend.position = "none",
panel.border = element_blank(), axis.text.x = element_blank(),
axis.ticks = element_blank()) + #theme(plot.margin =unit(c(-0.5,1, 0, 0.5), "lines")) +
xlab(NULL) + ylab(NULL)
data.table
data_table
data_table <- ggplot(mdat, aes(x = factor(variable), y = factor(method),
label = format(round(mean,3), nsmall = 1), colour = factor(method))) +
geom_text(size = 3.5) + theme_bw()  +
theme(panel.grid.major = element_blank(), legend.position = "none",
panel.border = element_blank(), axis.text.x = element_blank(),
axis.ticks = element_blank(), plot.margin =unit(c(-0.5,1, 0, 0.5), "line")) +
xlab(NULL) + ylab(NULL)
require(grid)
data_table <- ggplot(mdat, aes(x = factor(variable), y = factor(method),
label = format(round(mean,3), nsmall = 1), colour = factor(method))) +
geom_text(size = 3.5) + theme_bw()  +
theme(panel.grid.major = element_blank(), legend.position = "none",
panel.border = element_blank(), axis.text.x = element_blank(),
axis.ticks = element_blank(), plot.margin =unit(c(-0.5,1, 0, 0.5), "line")) +
xlab(NULL) + ylab(NULL)
data_table
data_table <- ggplot(mdat, aes(x = factor(variable), y = factor(method),
label = format(round(mean,3), nsmall = 2), colour = factor(method))) +
geom_text(size = 3.5) + theme_bw()  +
theme(panel.grid.major = element_blank(), legend.position = "none",
panel.border = element_blank(), axis.text.x = element_blank(),
axis.ticks = element_blank(), plot.margin =unit(c(-0.5,1, 0, 0.5), "line")) +
xlab(NULL) + ylab(NULL)
data_table
?format
mdat
truevals
tvlong <- melt(truevals)
tvlong
tvlong$method = rep("true", 6)
mdat <- ddply(cchData.long, .(variable, method), summarize, mean = mean(value))
tvlong <- melt(truevals)
tvlong$method = rep("true", 6)
tvlong
names(tvlong) = c("variable", "mean", "method")
names(tvlong) = c("variable", "mean", "method"); tvlong <- tvlong[,c(1,3,2)]
tvlong
mdat
tvlong$method = rep("truth", 6)
names(tvlong) = c("variable", "mean", "method"); tvlong <- tvlong[,c(1,3,2)]
tvlong
tvlong <- melt(truevals)
tvlong$method = rep("truth", 6)
names(tvlong) = c("variable", "mean", "method"); tvlong <- tvlong[,c(1,3,2)]
data_table <- ggplot(mdat, aes(x = factor(variable), y = factor(method),
label = format(round(mean,3), nsmall = 1), colour = factor(method))) +
geom_text(size = 3.5) + theme_bw()  +
theme(panel.grid.major = element_blank(), legend.position = "none",
panel.border = element_blank(), axis.text.x = element_blank(),
axis.ticks = element_blank(), plot.margin =unit(c(-0.5,1, 0, 0.5), "line")) +
xlab(NULL) + ylab(NULL)
data_table
mdat
mdat <- rbind(mdat, tvlong)
data_table <- ggplot(mdat, aes(x = factor(variable), y = factor(method),
label = format(round(mean,3), nsmall = 1), colour = factor(method))) +
geom_text(size = 3.5) + theme_bw()  +
theme(panel.grid.major = element_blank(), legend.position = "none",
panel.border = element_blank(), axis.text.x = element_blank(),
axis.ticks = element_blank(), plot.margin =unit(c(-0.5,1, 0, 0.5), "line")) +
xlab(NULL) + ylab(NULL)
data_table
Layout <- grid.layout(nrow = 2, ncol = 1, heights = unit(c(2,
Layout <- grid.layout(nrow = 2, ncol = 1, heights = unit(c(2, 0.25), c("null", "null")))
)))
Layout <- grid.layout(nrow = 2, ncol = 1, heights = unit(c(2, 0.25), c("null", "null")))
grid.show.layout(Layout)
vplayout <- function(...) {
grid.newpage()
pushViewport(viewport(layout = Layout))
}
subplot <- function(x, y) viewport(layout.pos.row = x,
layout.pos.col = y)
mmplot <- function(a, b) {
vplayout()
print(a, vp = subplot(1, 1))
print(b, vp = subplot(2, 1))
}
mmplot(p, data_table)
p <- ggplot(cchData.long, aes(x=value, fill = method))
p <- p + geom_density(alpha = .6) + facet_grid(~variable, scales="free_x")
p <- p + geom_vline(data = truevals.long, aes(xintercept=value), size = 2, colour = "purple")
p <- p+theme(text=element_text(size=25))
p <- p+theme(axis.text.x = element_text(size=13), legend.position= "above")
print(p)
p <- ggplot(cchData.long, aes(x=value, fill = method))
p <- p + geom_density(alpha = .6) + facet_grid(~variable, scales="free_x")
p <- p + geom_vline(data = truevals.long, aes(xintercept=value), size = 2, colour = "purple")
p <- p+theme(text=element_text(size=25))
p <- p+theme(axis.text.x = element_text(size=13), legend.position= "top")
print(p)
p <- p+theme(axis.text.x = element_text(size=13), legend.position= "top", legend.title = element_blank())
print(p)
p <- ggplot(cchData.long, aes(x=value, fill = method, color = method))
p <- p + geom_density(alpha = .6) + facet_grid(~variable, scales="free_x")
p <- p + geom_vline(data = truevals.long, aes(xintercept=value), size = 2, colour = "purple")
p <- p+theme(text=element_text(size=25))
p <- p+theme(axis.text.x = element_text(size=13), legend.position= "top", legend.title = element_blank())
print(p)
p <- ggplot(cchData.long, aes(x=value, fill = method))
p <- p + geom_density(alpha = .5) + facet_grid(~variable, scales="free_x")
p <- p + geom_vline(data = truevals.long, aes(xintercept=value), size = 2, colour = "purple")
p <- p+theme(text=element_text(size=25))
p <- p+theme(axis.text.x = element_text(size=13), legend.position= "top", legend.title = element_blank())
print(p)
p <- ggplot(cchData.long, aes(x=value, fill = method))
p <- p + geom_density(alpha = .5) + facet_grid(~variable, scales="free_x")
p <- p + geom_vline(data = truevals.long, aes(xintercept=value), size = 1, colour = "purple")
p <- p+theme(text=element_text(size=25))
p <- p+theme(axis.text.x = element_text(size=13), legend.position= "top", legend.title = element_blank())
print(p)
data_table <- ggplot(mdat, aes(x = factor(variable), y = factor(method),
label = format(round(mean,3), nsmall = 1), colour = factor(method))) +
geom_text(size = 3.5) + theme_bw()  +
theme(panel.grid.major = element_blank(), legend.position = "none",
panel.border = element_blank(), axis.text.x = element_blank(),
axis.ticks = element_blank(), plot.margin =unit(c(-0.5,1, 0, 0.5), "line")) +
xlab(NULL) + ylab(NULL)
mmplot(p, data_table)
gg_color_hue <- function(n) {
hues = seq(15, 375, length=n+1)
hcl(h=hues, l=65, c=100)[1:n]
}
gg_color_hue(3_)
gg_color_hue(3)
p <- ggplot(cchData.long, aes(x=value, fill = method))
p <- p + geom_density(alpha = .5) + facet_grid(~variable, scales="free_x")
p <- p + geom_vline(data = truevals.long, aes(xintercept=value), size = 1, colour = #619CFF")
p <- p+theme(text=element_text(size=25))
p <- p+theme(axis.text.x = element_text(size=13), legend.position= "top", legend.title = element_blank())
print(p)
p <- ggplot(cchData.long, aes(x=value, fill = method))
p <- p + geom_density(alpha = .5) + facet_grid(~variable, scales="free_x")
p <- p + geom_vline(data = truevals.long, aes(xintercept=value), size = 1, colour = "#619CFF")
p <- p+theme(text=element_text(size=25))
p <- p+theme(axis.text.x = element_text(size=13), legend.position= "top", legend.title = element_blank())
print(p)
p <- p + scale_fill_discrete(values = c("#F8766D" "#00BA38"), labels = c("nonparametric", "semiparametric")
p <- ggplot(cchData.long, aes(x=value, fill = method))
p <- p + geom_density(alpha = .5) + facet_grid(~variable, scales="free_x")
p <- p + geom_vline(data = truevals.long, aes(xintercept=value), size = 1, colour = "#619CFF")
p <- p+theme(text=element_text(size=25))
p <- p+theme(axis.text.x = element_text(size=13), legend.position= "top", legend.title = element_blank())
p <- p + scale_fill_discrete(values = c("#F8766D" "#00BA38"), labels = c("nonparametric", "semiparametric")
print(p)
p <- p + scale_fill_discrete(values = c("#F8766D" "#00BA38"),
labels = c("nonparametric", "semiparametric"))
p <- p + scale_fill_discrete(values = c("#F8766D" "#00BA38"))#,
p <- p + scale_fill_discrete(values = c("#F8766D", "#00BA38"))#,
p <- p + scale_fill_manual(values = c("#F8766D", "#00BA38"))#,
print(p)
p <- ggplot(cchData.long, aes(x=value, fill = method))
p <- p + geom_density(alpha = .5) + facet_grid(~variable, scales="free_x")
p <- p + geom_vline(data = truevals.long, aes(xintercept=value), size = 1, colour = "#00BA38")
p <- p+theme(text=element_text(size=25))
p <- p+theme(axis.text.x = element_text(size=13), legend.position= "top", legend.title = element_blank())
p <- p + scale_fill_manual(values = c("#F8766D", "#619CFF"))#,
print(p)
p <- ggplot(cchData.long, aes(x=value, fill = method))
p <- p + geom_density(alpha = .5) + facet_grid(~variable, scales="free_x")
p <- p + geom_vline(data = truevals.long, aes(xintercept=value), size = 1, colour = "#F8766D")
p <- p+theme(text=element_text(size=25))
p <- p+theme(axis.text.x = element_text(size=13), legend.position= "top", legend.title = element_blank())
p <- p + scale_fill_manual(values = c("#00BA38", "#619CFF"))#,
labels = c("nonparametric", "semiparametric"))
print(p)
p <- ggplot(cchData.long, aes(x=value, fill = method))
p <- p + geom_density(alpha = .5) + facet_grid(~variable, scales="free_x")
p <- p + geom_vline(data = truevals.long, aes(xintercept=value), size = 1,
linetype = 2, colour = "#619CFF")
p <- p+theme(text=element_text(size=25))
p <- p+theme(axis.text.x = element_text(size=13), legend.position= "top", legend.title = element_blank())
p <- p + scale_fill_manual(values = c("#00BA38", "#F8766D"))#,
labels = c("nonparametric", "semiparametric"))
print(p)
gg_color_hue(2)
p <- ggplot(cchData.long, aes(x=value, fill = method))
p <- p + geom_density(alpha = .5) + facet_grid(~variable, scales="free_x")
p <- p + geom_vline(data = truevals.long, aes(xintercept=value), size = 1,
linetype = 2, colour = "purple")
p <- p+theme(text=element_text(size=25))
p <- p+theme(axis.text.x = element_text(size=13), legend.position= "top", legend.title = element_blank())
p <- p
print(p)
data_table <- ggplot(mdat, aes(x = factor(variable), y = factor(method),
label = format(round(mean,3), nsmall = 1), colour = factor(method))) +
geom_text(size = 3.5) + theme_bw()  +
theme(panel.grid.major = element_blank(), legend.position = "none",
panel.border = element_blank(), axis.text.x = element_blank(),
axis.ticks = element_blank(), plot.margin =unit(c(-0.5,1, 0, 0.5), "line")) +
xlab(NULL) + ylab(NULL) + scale_color_manual(values = c("purple", "#F8766D" "#00BFC4"))
data_table <- ggplot(mdat, aes(x = factor(variable), y = factor(method),
label = format(round(mean,3), nsmall = 1), colour = factor(method))) +
geom_text(size = 3.5) + theme_bw()  +
theme(panel.grid.major = element_blank(), legend.position = "none",
panel.border = element_blank(), axis.text.x = element_blank(),
axis.ticks = element_blank(), plot.margin =unit(c(-0.5,1, 0, 0.5), "line")) +
xlab(NULL) + ylab(NULL) + scale_color_manual(values = c("purple", "#F8766D" ,"#00BFC4"))
data_table
data_table <- ggplot(mdat, aes(x = factor(variable), y = factor(method),
label = format(round(mean,3), nsmall = 1), colour = factor(method))) +
geom_text(size = 3.5) + theme_bw()  +
theme(panel.grid.major = element_blank(), legend.position = "none",
panel.border = element_blank(), axis.text.x = element_blank(),
axis.ticks = element_blank(), plot.margin =unit(c(-0.5,1, 0, 0.5), "line")) +
xlab(NULL) + ylab(NULL) + scale_color_manual(values = c("#F8766D" ,"#00BFC4", "purple"))
data_table
mmplot(p, data_table)
data_table <- ggplot(mdat, aes(x = factor(variable), y = factor(method),
label = format(round(mean,3), nsmall = 1), colour = factor(method))) +
geom_text(size = 3.5) + theme_bw()  +
theme(panel.grid.major = element_blank(), legend.position = "none",
panel.border = element_blank(), axis.text.x = element_blank(),
axis.ticks = element_blank(), plot.margin =unit(c(-0.5,1, 0, 0.5), "line")) +
xlab(NULL) + ylab(NULL)
+ scale_color_manual(values = c("#F8766D" ,"#00BFC4", "purple")) +
scale_y_discrete(labels = element_blank())
data_table <- ggplot(mdat, aes(x = factor(variable), y = factor(method),
label = format(round(mean,3), nsmall = 1), colour = factor(method))) +
geom_text(size = 3.5) + theme_bw()  +
theme(panel.grid.major = element_blank(), legend.position = "none",
panel.border = element_blank(), axis.text.x = element_blank(),
axis.ticks = element_blank(), plot.margin =unit(c(-0.5,1, 0, 0.5), "line")) +
xlab(NULL) + ylab(NULL) +
scale_color_manual(values = c("#F8766D" ,"#00BFC4", "purple")) +
scale_y_discrete(labels = element_blank())
data_table
mmplot(p, data_table)
?aes
?geom_text
data_table <- ggplot(mdat, aes(x = factor(variable), y = factor(method),
label = format(round(mean,3), nsmall = 1), colour = factor(method))) +
geom_text(size = 3.5, hjust = 0) + theme_bw()  +
theme(panel.grid.major = element_blank(), legend.position = "none",
panel.border = element_blank(), axis.text.x = element_blank(),
axis.ticks = element_blank(), plot.margin =unit(c(-0.5,1, 0, 0.5), "line")) +
xlab(NULL) + ylab(NULL) +
scale_color_manual(values = c("#F8766D" ,"#00BFC4", "purple")) +
scale_y_discrete(labels = element_blank())
mmplot(p, data_table)
tvl
mdat
data_table <- ggplot(mdat, aes(x = factor(variable), y = factor(method),
label = format(round(mean,3), nsmall = 1), colour = factor(method))) +
geom_text(size = 3.5, hjust = 0) + theme_bw()  +
theme(panel.grid.major = element_blank(), legend.position = "none",
panel.border = element_blank(), axis.text.x = element_blank(),
axis.ticks = element_blank(), plot.margin =unit(c(-0.5,1, 0, 0.5), "line")) +
xlab(NULL) + ylab(NULL) +
scale_color_manual(values = c("#F8766D" ,"#00BFC4", "purple")) +
scale_y_discrete(labels = c("true", "SP", "NP"))
mmplot(p, data_table)
data_table <- ggplot(mdat, aes(x = factor(variable), y = factor(method),
label = format(round(mean,3), nsmall = 1), colour = factor(method))) +
geom_text(size = 3.5, hjust = 0) + theme_bw()  +
theme(panel.grid.major = element_blank(), legend.position = "none",
panel.border = element_blank(), axis.text.x = element_blank(),
axis.ticks = element_blank(), plot.margin =unit(c(-0.5,1, 0, 0.5), "line")) +
xlab(NULL) + ylab(NULL) +
scale_color_manual(values = c("#F8766D" ,"#00BFC4", "purple")) +
scale_y_discrete(labels = c("NP", "SP", "true"))
mmplot(p, data_table)
data_table <- ggplot(mdat, aes(x = factor(variable), y = factor(method),
label = format(round(mean,3), nsmall = 1), colour = factor(method))) +
geom_text(size = 5, hjust = 0) + theme_bw()  +
theme(panel.grid.major = element_blank(), legend.position = "none",
panel.border = element_blank(), axis.text.x = element_blank(),
axis.ticks = element_blank(), plot.margin =unit(c(-0.5,1, 0, 0.5), "line")) +
xlab(NULL) + ylab(NULL) +
scale_color_manual(values = c("#F8766D" ,"#00BFC4", "purple")) +
scale_y_discrete(labels = c("NP", "SP", "true"))
mmplot(p, data_table)
ggsave("cch_validation.png", width = 15, height = 7 )
ggsave("cch_validation.png", width = 15, height = 8 )
png(fileName = "cch_validation.png", width = 15, height = 8)
mmplot(p, data_table)
dev.off()
png(filename = "cch_validation.png", width = 15, height = 8)
?png
png(filename = "cch_validation.png", width = 15, height = 8, units = "in")
mmplot(p, data_table)
dev.off()
png(filename = "cch_validation.png", width = 15, height = 8, units = "in", res = "90" )
png(filename = "cch_validation.png", width = 15, height = 8, units = "in", res = 90)
mmplot(p, data_table)
dev.off()
data_table <- ggplot(mdat, aes(x = factor(variable), y = factor(method),
label = format(round(mean,3), nsmall = 1), colour = factor(method))) +
geom_text(size = 5, hjust = 0) + theme_bw()  +
theme(panel.grid.major = element_blank(), legend.position = "none",
panel.border = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 6),
axis.ticks = element_blank(),
plot.margin =unit(c(-0.5,1, 0, 0.5), "line")) +
xlab(NULL) + ylab(NULL) +
scale_color_manual(values = c("#F8766D" ,"#00BFC4", "purple")) +
scale_y_discrete(labels = c("NP", "SP", "true"))
mmplot(p, data_table)
data_table <- ggplot(mdat, aes(x = factor(variable), y = factor(method),
label = format(round(mean,3), nsmall = 1), colour = factor(method))) +
geom_text(size = 5, hjust = 0) + theme_bw()  +
theme(panel.grid.major = element_blank(), legend.position = "none",
panel.border = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 12),
axis.ticks = element_blank(),
plot.margin =unit(c(-0.5,1, 0, 0.5), "line")) +
xlab(NULL) + ylab(NULL) +
scale_color_manual(values = c("#F8766D" ,"#00BFC4", "purple")) +
scale_y_discrete(labels = c("NP", "SP", "true"))
mmplot(p, data_table)
data_table <- ggplot(mdat, aes(x = factor(variable), y = factor(method),
label = format(round(mean,3), nsmall = 1), colour = factor(method))) +
geom_text(size = 5, hjust = 0) + theme_bw()  +
theme(panel.grid.major = element_blank(), legend.position = "none",
panel.border = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 14),
axis.ticks = element_blank(),
plot.margin =unit(c(-0.5,1, 0, 0.5), "line")) +
xlab(NULL) + ylab(NULL) +
scale_color_manual(values = c("#F8766D" ,"#00BFC4", "purple")) +
scale_y_discrete(labels = c("NP", "SP", "true"))
mmplot(p, data_table)
png(filename = "cch_validation.png", width = 15, height = 8, units = "in", res = 90)
mmplot(p, data_table)
dev.off()
NPresults <- NULL
for( i in 1:10){
load(paste("ncc.np.sim_", i, ".Rdata", sep = ""))
NPresults <- rbind(NPresults, data.frame(ldply(ncc.np.sim[1,], I)) )
}
##sp
load("ncc.sp.sim.Rdata")
nccData <- data.frame(matrix(nrow=1000*2, ncol = 7))
names(nccData) = c("coef", "AUC", "FPR", "TPR", "NPV", "PPV", "method")
nccData[1:1000,-c(7)] <- data.frame(ldply(ncc.sp.sim[1,], I)) #estimates
#not done yet
nccData[-c(1:1000),-c(1,7)] <- NPresults
nccData[,7] <- factor(rep(c("semiparametric", "nonparametric"), c(1000, 1000)))
nccData.long <- melt(nccData)
ddply(nccData.long, .(variable, method), summarize, mean = mean(value),
se = sd(value))
ddply(nccData.long, .(variable, method), summarize, mean = mean(value)))
ddply(nccData.long, .(variable, method), summarize, mean = mean(value))
p <- ggplot(nccData.long, aes(x=value, fill = method))
p <- p + geom_density(alpha = .6) + facet_grid(~variable, scales="free_x")
p <- p + geom_vline(data = truevals.long, aes(xintercept=value), size = 2, colour = "purple")
p <- p+theme(text=element_text(size=25))
p <- p+theme(axis.text.x = element_text(size=13))
print(p)
mdat <- ddply(nccData.long, .(variable, method), summarize, mean = mean(value))
tvlong <- melt(truevals)
tvlong$method = rep("truth", 6)
names(tvlong) = c("variable", "mean", "method"); tvlong <- tvlong[,c(1,3,2)]
mdat <- rbind(mdat, tvlong)
p <- ggplot(nccData.long, aes(x=value, fill = method))
p <- p + geom_density(alpha = .6) + facet_grid(~variable, scales="free_x")
p <- p + geom_vline(data = truevals.long, aes(xintercept=value), size = 2, colour = "purple")
p <- p+theme(text=element_text(size=25))
p <- p+theme(text=element_text(size=25))
p <- p+theme(axis.text.x = element_text(size=13), legend.position= "top", legend.title = element_blank())
p <- p
print(p)
data_table <- ggplot(mdat, aes(x = factor(variable), y = factor(method),
label = format(round(mean,3), nsmall = 1), colour = factor(method))) +
geom_text(size = 5, hjust = 0) + theme_bw()  +
theme(panel.grid.major = element_blank(), legend.position = "none",
panel.border = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_text(size = 14),
axis.ticks = element_blank(),
plot.margin =unit(c(-0.5,1, 0, 0.5), "line")) +
xlab(NULL) + ylab(NULL) +
scale_color_manual(values = c("#F8766D" ,"#00BFC4", "purple")) +
scale_y_discrete(labels = c("NP", "SP", "true"))
mmplot(p, data_table)
png(filename = "ncc_validation.png", width = 15, height = 8, units = "in", res = 90)
mmplot(p, data_table)
dev.off()
EmpiricalSE.long <- ddply(nccData.long, .(variable, method), summarize, mean = mean(value),
se = sd(value))
EmpiricalSE.long <- ddply(nccData.long, .(variable, method), summarize, mean = mean(value))
NPresults <- NULL
for( i in 1:10){
load(paste("ncc.np.sim_", i, ".Rdata", sep = ""))
NPresults <- rbind(NPresults, data.frame(ldply(ncc.np.sim[2,], I)) )
}
##sp
load("ncc.sp.sim.Rdata")
nccData <- data.frame(matrix(nrow=1000*2, ncol = 7))
names(nccData) = c("coef", "AUC", "FPR", "TPR", "NPV", "PPV", "method")
nccData[1:1000,-c(7)] <- data.frame(ldply(ncc.sp.sim[2,], I)) #se
#not done yet
nccData[-c(1:1000),-c(1,7)] <- NPresults
nccData[,7] <- factor(rep(c("semiparametric", "nonparametric"), c(1000, 1000)))
nccData.long <- melt(nccData)
cbind( ddply(nccData.long, .(variable, method), summarize, meanSE = mean(value)), EmpiricalSE.long$se)
mdat <- ddply(nccData.long, .(variable, method), summarize, meanSE = mean(value)))
mdat <- ddply(nccData.long, .(variable, method), summarize, meanSE = mean(value))
mdat
mdat <- ddply(nccData.long, .(variable, method), summarize, mean = mean(value))
truevals <- ddply(nccData.long, .(variable, method), summarize, mean = sd(value))
truevals
NPresults <- NULL
for( i in 1:10){
load(paste("ncc.np.sim_", i, ".Rdata", sep = ""))
NPresults <- rbind(NPresults, data.frame(ldply(ncc.np.sim[1,], I)) )
}
##sp
load("ncc.sp.sim.Rdata")
nccData <- data.frame(matrix(nrow=1000*2, ncol = 7))
names(nccData) = c("coef", "AUC", "FPR", "TPR", "NPV", "PPV", "method")
nccData[1:1000,-c(7)] <- data.frame(ldply(ncc.sp.sim[1,], I)) #estimates
#not done yet
nccData[-c(1:1000),-c(1,7)] <- NPresults
nccData[,7] <- factor(rep(c("semiparametric", "nonparametric"), c(1000, 1000)))
nccData.long <- melt(nccData)
truevals <- ddply(nccData.long, .(variable, method), summarize, mean = sd(value))
EmpiricalSE.long <- ddply(nccData.long, .(variable, method), summarize, mean = mean(value))
NPresults <- NULL
for( i in 1:10){
load(paste("ncc.np.sim_", i, ".Rdata", sep = ""))
NPresults <- rbind(NPresults, data.frame(ldply(ncc.np.sim[2,], I)) )
}
##sp
load("ncc.sp.sim.Rdata")
nccData <- data.frame(matrix(nrow=1000*2, ncol = 7))
names(nccData) = c("coef", "AUC", "FPR", "TPR", "NPV", "PPV", "method")
nccData[1:1000,-c(7)] <- data.frame(ldply(ncc.sp.sim[2,], I)) #se
#not done yet
nccData[-c(1:1000),-c(1,7)] <- NPresults
nccData[,7] <- factor(rep(c("semiparametric", "nonparametric"), c(1000, 1000)))
nccData.long <- melt(nccData)
mdat <- ddply(nccData.long, .(variable, method), summarize, mean = mean(value))
head(mdat)
head(truevals)
NPresults <- NULL
for( i in 1:10){
load(paste("ncc.np.sim_", i, ".Rdata", sep = ""))
NPresults <- rbind(NPresults, data.frame(ldply(ncc.np.sim[1,], I)) )
}
##sp
load("ncc.sp.sim.Rdata")
nccData <- data.frame(matrix(nrow=1000*2, ncol = 7))
names(nccData) = c("coef", "AUC", "FPR", "TPR", "NPV", "PPV", "method")
nccData[1:1000,-c(7)] <- data.frame(ldply(ncc.sp.sim[1,], I)) #estimates
#not done yet
nccData[-c(1:1000),-c(1,7)] <- NPresults
nccData[,7] <- factor(rep(c("semiparametric", "nonparametric"), c(1000, 1000)))
nccData.long <- melt(nccData)
head(nccData.long)
table(nccData.long$method)
table(nccData.long$variable)
truevals <- ddply(nccData.long, .(variable, method), summarize, mean = sd(value))
truevals
mdat
cbind( ddply(nccData.long, .(variable, method), summarize, meanSE = mean(value)), EmpiricalSE.long$se)
EmpiricalSE.long
ddply(nccData.long, .(variable, method), summarize, meanSE = mean(value))
EmpiricalSE.long$se
cbind( ddply(nccData.long, .(variable, method), summarize, meanSE = mean(value)), truevals$mean)
cbind( ddply(nccData.long, .(variable, method), summarize, meanSE = mean(value)), se = truevals$mean)
p <- ggplot(nccData.long, aes(x=value, fill = method))
p <- p + geom_density(alpha = 1) + facet_grid(method~variable, scales="free_x")
p <- p + geom_vline(data = truevals, aes(xintercept=se), size = 1.5, colour = "purple", linetype=2)
p <- p+theme(text=element_text(size=25))
p <- p+theme(axis.text.x = element_text(size=13)) #+ ylim(c(0,100))
print(p)
p <- p + geom_vline(data = truevals, aes(xintercept=mean), size = 1.5, colour = "purple", linetype=2)
p <- p+theme(text=element_text(size=25))
p <- p+theme(axis.text.x = element_text(size=13)) #+ ylim(c(0,100))
print(p)
p <- ggplot(nccData.long, aes(x=value, fill = method))
p <- p + geom_density(alpha = 1) + facet_grid(method~variable, scales="free_x")
p <- p + geom_vline(data = truevals, aes(xintercept=mean), size = 1.5, colour = "purple", linetype=2)
p <- p+theme(text=element_text(size=25))
p <- p+theme(axis.text.x = element_text(size=13)) #+ ylim(c(0,100))
print(p)
truevals
EmpiricalSE.long <- ddply(nccData.long, .(variable, method), summarize, mean = mean(value),
se = sd(value))
NPresults <- NULL
for( i in 1:10){
load(paste("ncc.np.sim_", i, ".Rdata", sep = ""))
NPresults <- rbind(NPresults, data.frame(ldply(ncc.np.sim[2,], I)) )
}
##sp
load("ncc.sp.sim.Rdata")
nccData <- data.frame(matrix(nrow=1000*2, ncol = 7))
names(nccData) = c("coef", "AUC", "FPR", "TPR", "NPV", "PPV", "method")
nccData[1:1000,-c(7)] <- data.frame(ldply(ncc.sp.sim[2,], I)) #se
#not done yet
nccData[-c(1:1000),-c(1,7)] <- NPresults
nccData[,7] <- factor(rep(c("semiparametric", "nonparametric"), c(1000, 1000)))
nccData.long <- melt(nccData)
p <- ggplot(nccData.long, aes(x=value, fill = method))
p <- p + geom_density(alpha = 1) + facet_grid(method~variable, scales="free_x")
p <- p + geom_vline(data = truevals, aes(xintercept=mean), size = 1.5, colour = "purple", linetype=2)
p <- p+theme(text=element_text(size=25))
p <- p+theme(axis.text.x = element_text(size=13)) #+ ylim(c(0,100))
print(p)
