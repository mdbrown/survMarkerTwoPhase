sampleProb <- numeric(N)
#all non-censored observations were sampled, so their sample probability is 1
sampleProb[SimData$di==1] <- 1
sampleProb[SimData$di==0] <- 300/N
SimData$weights <- 1/sampleProb
subdat.type1 <- SimData[sampleInd==1,]
#estimate accuracy measures using only the subcohort data
tmp <- survMTP.estimate(time =subdat.type1$xi,
event = subdat.type1$di,
marker = subdat.type1$Y,
weights = subdat.type1$weights,
cohortN = N,
study.design = "Case-Cohort",
measures = "AUC",
predict.time = 2,
cutpoint = 0)
type1.estimates$AUC[index] = AUCVec[j]
type1.estimates$AUCest[index] = tmp$estimates[2]
type1.estimates$SE[index] = tmp$se[2]
type1.estimates$subN[index] = sum(sampleInd)
type1.estimates$beta[index] = betaVec[j]
type1.estimates$betaest[index] <- tmp$estimates[1]
type1.estimates$betaSE[index] <- tmp$se[1]
#### Type 2
sampleInd <- rep(0, N)
# sample 100 individuals with observed failure time.
CaseInd <- c(1:N)[SimData$di==1]
sampleInd[sample(CaseInd, 250)] <- 1
# sample 100 individuals with censored failure time.
ControlInd <- c(1:N)[SimData$di==0]
sampleInd[sample(ControlInd, 250)] <- 1
sampleProb <- numeric(500)
#all non-censored observations were sampled
sampleProb[SimData$di==1] <- 250/length(CaseInd)
sampleProb[SimData$di==0] <- 250/length(ControlInd)
SimData$weights2 <- 1/sampleProb
subdat.type2 <- SimData[sampleInd==1,]
#estimate accuracy measures using only the subcohort data
tmp <- survMTP.estimate(time =subdat.type2$xi,
event = subdat.type2$di,
marker = subdat.type2$Y,
weights = subdat.type2$weights2,
cohortN = N,
study.design = "Case-Cohort",
measures = "AUC",
predict.time = 2,
cutpoint = 0)
type2.estimates$AUC[index] = AUCVec[j]
type2.estimates$AUCest[index] = tmp$estimates[2]
type2.estimates$SE[index] = tmp$se[2]
type2.estimates$beta[index] = betaVec[j]
type2.estimates$betaest[index] <- tmp$estimates[1]
type2.estimates$betaSE[index] <- tmp$se[1]
print(paste(AUCVec[j], i, sep = ":"))
}
}
ddply(type1.estimates, "AUC", function(df)c("MeanAUCest" = mean(df$AUCest),
"MeanAUCSE" = mean(df$SE),
"EmpAUCSE"  = sd(df$AUCest),
"beta" = mean(df$beta),
"MeanbetaEST" = mean(df$betaest),
"MeanbetaSE" = mean(df$betaSE),
"EmpbetaSE" = sd(df$betaest)))
library(plyr)
save(type1.estimates, type2.estimates, cohort.estimates, file = "simOutput.Rdata")
ddply(type1.estimates, "AUC", function(df)c("MeanAUCest" = mean(df$AUCest),
"MeanAUCSE" = mean(df$SE),
"EmpAUCSE"  = sd(df$AUCest),
"beta" = mean(df$beta),
"MeanbetaEST" = mean(df$betaest),
"MeanbetaSE" = mean(df$betaSE),
"EmpbetaSE" = sd(df$betaest)))
ddply(type2.estimates, "AUC", function(df)c("MeanAUCest" = mean(df$AUCest),
"MeanAUCSE" = mean(df$SE),
"EmpAUCSE"  = sd(df$AUCest),
"beta" = mean(df$beta),
"MeanbetaEST" = mean(df$betaest),
"MeanbetaSE" = mean(df$betaSE),
"EmpbetaSE" = sd(df$betaest)))
ddply(cohort.estimates, "AUC", function(df)c("MeanAUCest" = mean(df$AUCest),
"MeanAUCSE" = mean(df$SE),
"EmpAUCSE"  = sd(df$AUCest),
"beta" = mean(df$beta),
"MeanbetaEST" = mean(df$betaest),
"MeanbetaSE" = mean(df$betaSE),
"EmpbetaSE" = sd(df$betaest)))
cch.1.est <- matrix(ncol = 7, nrow = NSim)
load("simOutput.Rdata")
ddply(type1.estimates, "AUC", function(df)c("MeanAUCest" = mean(df$AUCest),
"MeanAUCSE" = mean(df$SE),
"EmpAUCSE"  = sd(df$AUCest),
"beta" = mean(df$beta),
"MeanbetaEST" = mean(df$betaest),
"MeanbetaSE" = mean(df$betaSE),
"EmpbetaSE" = sd(df$betaest)))
cch.1.est <- matrix(ncol = 7, nrow = NSim)
cch.1.se  <- matrix(ncol = 7, nrow = NSim)
cch.1.N <- numeric(Nsim)
round(get.Betas(parameter = "AUC", a = .1, predict.time =2, cutoff = 0,
parval.H0 =.75, parval.Ha=.9,  f_x = dnorm ), 4)
mybeta <- 0.8789
names(tmp)
names(tmp$estimates)
mybeta <- 0.8789
NSim = 1000
N <- 1000
#type I and type II estimates
cch.1.est <- matrix(ncol = 7, nrow = NSim)
cch.1.se  <- matrix(ncol = 7, nrow = NSim)
cch.1.N <- numeric(Nsim)
cch.2.est <- matrix(ncol = 7, nrow = NSim)
cch.2.se  <- matrix(ncol = 7, nrow = NSim)
cohort.est <- matrix(ncol = 7, nrow = NSim)
cohort.se  <- matrix(ncol = 7, nrow = NSim)
index = 0
for( i in 1:NSim){
index = index + 1;
#simulate cohorts with 40% censoring, 500 individuals
SimData <- SIM.data.singleMarker(nn = N,
beta = betaVec[j],
cens.perc = .7)
tmp <- survAM.estimate(time =SimData$xi,
event = SimData$di,
marker = SimData$Y,
predict.time = 2,
cutpoint = 0)
cohort.est[i,] = tmp$estimates
cohort.se[i,]  = tmp$se
#CCH type I
sampleInd <- rep(0, N)
# sample all with observed failure time. (300 individuals)
sampleInd[SimData$di==1] <- 1
#sample 150 more observations from the entire data set without replacement
sampleInd[sample(1:N, 300)] <- 1
sampleProb <- numeric(N)
#all non-censored observations were sampled, so their sample probability is 1
sampleProb[SimData$di==1] <- 1
sampleProb[SimData$di==0] <- 300/N
SimData$weights <- 1/sampleProb
subdat.type1 <- SimData[sampleInd==1,]
#estimate accuracy measures using only the subcohort data
tmp <- survMTP.estimate(time =subdat.type1$xi,
event = subdat.type1$di,
marker = subdat.type1$Y,
weights = subdat.type1$weights,
cohortN = N,
study.design = "Case-Cohort",
predict.time = 2,
cutpoint = 0)
cch.1.est[i,] = tmp$estimates
cch.1.se[i,]  = tmp$se
cch.1.N[i] = sum(sampleInd)
#### Type 2
sampleInd <- rep(0, N)
# sample 100 individuals with observed failure time.
CaseInd <- c(1:N)[SimData$di==1]
sampleInd[sample(CaseInd, 250)] <- 1
# sample 100 individuals with censored failure time.
ControlInd <- c(1:N)[SimData$di==0]
sampleInd[sample(ControlInd, 250)] <- 1
sampleProb <- numeric(500)
#all non-censored observations were sampled
sampleProb[SimData$di==1] <- 250/length(CaseInd)
sampleProb[SimData$di==0] <- 250/length(ControlInd)
SimData$weights2 <- 1/sampleProb
subdat.type2 <- SimData[sampleInd==1,]
#estimate accuracy measures using only the subcohort data
tmp <- survMTP.estimate(time =subdat.type2$xi,
event = subdat.type2$di,
marker = subdat.type2$Y,
weights = subdat.type2$weights2,
cohortN = N,
study.design = "Case-Cohort",
predict.time = 2,
cutpoint = 0)
cch.1.est[i,] = tmp$estimates
cch.1.se[i,]  = tmp$se
print(paste( i))
}
cohort.est[i,]
tmp$estimates
mybeta <- 0.8789
NSim = 1000
N <- 1000
#type I and type II estimates
cch.1.est <- matrix(ncol = 6, nrow = NSim)
cch.1.se  <- matrix(ncol = 6, nrow = NSim)
cch.1.N <- numeric(Nsim)
cch.2.est <- matrix(ncol = 6, nrow = NSim)
cch.2.se  <- matrix(ncol = 6, nrow = NSim)
cohort.est <- matrix(ncol = 6, nrow = NSim)
cohort.se  <- matrix(ncol = 6, nrow = NSim)
index = 0
for( i in 1:NSim){
index = index + 1;
#simulate cohorts with 40% censoring, 500 individuals
SimData <- SIM.data.singleMarker(nn = N,
beta = betaVec[j],
cens.perc = .7)
tmp <- survAM.estimate(time =SimData$xi,
event = SimData$di,
marker = SimData$Y,
predict.time = 2,
cutpoint = 0)
cohort.est[i,] = tmp$estimates
cohort.se[i,]  = tmp$se
#CCH type I
sampleInd <- rep(0, N)
# sample all with observed failure time. (300 individuals)
sampleInd[SimData$di==1] <- 1
#sample 150 more observations from the entire data set without replacement
sampleInd[sample(1:N, 300)] <- 1
sampleProb <- numeric(N)
#all non-censored observations were sampled, so their sample probability is 1
sampleProb[SimData$di==1] <- 1
sampleProb[SimData$di==0] <- 300/N
SimData$weights <- 1/sampleProb
subdat.type1 <- SimData[sampleInd==1,]
#estimate accuracy measures using only the subcohort data
tmp <- survMTP.estimate(time =subdat.type1$xi,
event = subdat.type1$di,
marker = subdat.type1$Y,
weights = subdat.type1$weights,
cohortN = N,
study.design = "Case-Cohort",
predict.time = 2,
cutpoint = 0)
cch.1.est[i,] = tmp$estimates
cch.1.se[i,]  = tmp$se
cch.1.N[i] = sum(sampleInd)
#### Type 2
sampleInd <- rep(0, N)
# sample 100 individuals with observed failure time.
CaseInd <- c(1:N)[SimData$di==1]
sampleInd[sample(CaseInd, 250)] <- 1
# sample 100 individuals with censored failure time.
ControlInd <- c(1:N)[SimData$di==0]
sampleInd[sample(ControlInd, 250)] <- 1
sampleProb <- numeric(500)
#all non-censored observations were sampled
sampleProb[SimData$di==1] <- 250/length(CaseInd)
sampleProb[SimData$di==0] <- 250/length(ControlInd)
SimData$weights2 <- 1/sampleProb
subdat.type2 <- SimData[sampleInd==1,]
#estimate accuracy measures using only the subcohort data
tmp <- survMTP.estimate(time =subdat.type2$xi,
event = subdat.type2$di,
marker = subdat.type2$Y,
weights = subdat.type2$weights2,
cohortN = N,
study.design = "Case-Cohort",
predict.time = 2,
cutpoint = 0)
cch.1.est[i,] = tmp$estimates
cch.1.se[i,]  = tmp$se
print(paste( i))
}
cch.1.N <- numeric(Nsim)
cch.1.est <- matrix(ncol = 6, nrow = NSim)
cch.1.se  <- matrix(ncol = 6, nrow = NSim)
cch.1.N <- numeric(NSim)
cch.2.est <- matrix(ncol = 6, nrow = NSim)
cch.2.se  <- matrix(ncol = 6, nrow = NSim)
cohort.est <- matrix(ncol = 6, nrow = NSim)
cohort.se  <- matrix(ncol = 6, nrow = NSim)
index = 0
for( i in 1:NSim){
index = index + 1;
#simulate cohorts with 40% censoring, 500 individuals
SimData <- SIM.data.singleMarker(nn = N,
beta = betaVec[j],
cens.perc = .7)
tmp <- survAM.estimate(time =SimData$xi,
event = SimData$di,
marker = SimData$Y,
predict.time = 2,
cutpoint = 0)
cohort.est[i,] = tmp$estimates
cohort.se[i,]  = tmp$se
#CCH type I
sampleInd <- rep(0, N)
# sample all with observed failure time. (300 individuals)
sampleInd[SimData$di==1] <- 1
#sample 150 more observations from the entire data set without replacement
sampleInd[sample(1:N, 300)] <- 1
sampleProb <- numeric(N)
#all non-censored observations were sampled, so their sample probability is 1
sampleProb[SimData$di==1] <- 1
sampleProb[SimData$di==0] <- 300/N
SimData$weights <- 1/sampleProb
subdat.type1 <- SimData[sampleInd==1,]
#estimate accuracy measures using only the subcohort data
tmp <- survMTP.estimate(time =subdat.type1$xi,
event = subdat.type1$di,
marker = subdat.type1$Y,
weights = subdat.type1$weights,
cohortN = N,
study.design = "Case-Cohort",
predict.time = 2,
cutpoint = 0)
cch.1.est[i,] = tmp$estimates
cch.1.se[i,]  = tmp$se
cch.1.N[i] = sum(sampleInd)
#### Type 2
sampleInd <- rep(0, N)
# sample 100 individuals with observed failure time.
CaseInd <- c(1:N)[SimData$di==1]
sampleInd[sample(CaseInd, 250)] <- 1
# sample 100 individuals with censored failure time.
ControlInd <- c(1:N)[SimData$di==0]
sampleInd[sample(ControlInd, 250)] <- 1
sampleProb <- numeric(500)
#all non-censored observations were sampled
sampleProb[SimData$di==1] <- 250/length(CaseInd)
sampleProb[SimData$di==0] <- 250/length(ControlInd)
SimData$weights2 <- 1/sampleProb
subdat.type2 <- SimData[sampleInd==1,]
#estimate accuracy measures using only the subcohort data
tmp <- survMTP.estimate(time =subdat.type2$xi,
event = subdat.type2$di,
marker = subdat.type2$Y,
weights = subdat.type2$weights2,
cohortN = N,
study.design = "Case-Cohort",
predict.time = 2,
cutpoint = 0)
cch.1.est[i,] = tmp$estimates
cch.1.se[i,]  = tmp$se
print(paste( i))
}
names(cch.1.est) <- names(cch.1.se) <- names(cch.2.est) <- names(cch.2.se) <- names(cohort.se) <- names(cohort.est) <- names(tmp$estimates)
head(cch.1.est)
cch.1.est <- as.matrix(cch.1.est)
names(cch.1.est) <- names(cch.1.se) <- names(cch.2.est) <- names(cch.2.se) <- names(cohort.se) <- names(cohort.est) <- names(tmp$estimates)
head(cch.1.est)
cch.1.est <- as.data.frame(cch.1.est)
names(cch.1.est) <- names(cch.1.se) <- names(cch.2.est) <- names(cch.2.se) <- names(cohort.se) <- names(cohort.est) <- names(tmp$estimates)
head(cch.1.est)
colMeans(coh.est)
colMeans(cohort.est)
cch.1.est <- matrix(ncol = 6, nrow = NSim)
cch.1.se  <- matrix(ncol = 6, nrow = NSim)
cch.1.N <- numeric(NSim)
cch.2.est <- matrix(ncol = 6, nrow = NSim)
cch.2.se  <- matrix(ncol = 6, nrow = NSim)
cohort.est <- matrix(ncol = 6, nrow = NSim)
cohort.se  <- matrix(ncol = 6, nrow = NSim)
index = 0
for( i in 1:NSim){
index = index + 1;
#simulate cohorts with 40% censoring, 500 individuals
SimData <- SIM.data.singleMarker(nn = N,
beta = mybeta,
cens.perc = .7)
tmp <- survAM.estimate(time =SimData$xi,
event = SimData$di,
marker = SimData$Y,
predict.time = 2,
cutpoint = 0)
cohort.est[i,] = tmp$estimates
cohort.se[i,]  = tmp$se
#CCH type I
sampleInd <- rep(0, N)
# sample all with observed failure time. (300 individuals)
sampleInd[SimData$di==1] <- 1
#sample 150 more observations from the entire data set without replacement
sampleInd[sample(1:N, 300)] <- 1
sampleProb <- numeric(N)
#all non-censored observations were sampled, so their sample probability is 1
sampleProb[SimData$di==1] <- 1
sampleProb[SimData$di==0] <- 300/N
SimData$weights <- 1/sampleProb
subdat.type1 <- SimData[sampleInd==1,]
#estimate accuracy measures using only the subcohort data
tmp <- survMTP.estimate(time =subdat.type1$xi,
event = subdat.type1$di,
marker = subdat.type1$Y,
weights = subdat.type1$weights,
cohortN = N,
study.design = "Case-Cohort",
predict.time = 2,
cutpoint = 0)
cch.1.est[i,] = tmp$estimates
cch.1.se[i,]  = tmp$se
cch.1.N[i] = sum(sampleInd)
#### Type 2
sampleInd <- rep(0, N)
# sample 100 individuals with observed failure time.
CaseInd <- c(1:N)[SimData$di==1]
sampleInd[sample(CaseInd, 250)] <- 1
# sample 100 individuals with censored failure time.
ControlInd <- c(1:N)[SimData$di==0]
sampleInd[sample(ControlInd, 250)] <- 1
sampleProb <- numeric(500)
#all non-censored observations were sampled
sampleProb[SimData$di==1] <- 250/length(CaseInd)
sampleProb[SimData$di==0] <- 250/length(ControlInd)
SimData$weights2 <- 1/sampleProb
subdat.type2 <- SimData[sampleInd==1,]
#estimate accuracy measures using only the subcohort data
tmp <- survMTP.estimate(time =subdat.type2$xi,
event = subdat.type2$di,
marker = subdat.type2$Y,
weights = subdat.type2$weights2,
cohortN = N,
study.design = "Case-Cohort",
predict.time = 2,
cutpoint = 0)
cch.1.est[i,] = tmp$estimates
cch.1.se[i,]  = tmp$se
print(paste( i))
}
colMeans(cohort.est)
mybeta
apply(cohort.est, 2, sd)
colMeans(cohort.se)
apply(cohort.est, 2, sd) -colMeans(cohort.se)
round(apply(cohort.est, 2, sd) -colMeans(cohort.se), 4)
colMeans(cch.1.est)
round(apply(cch.1.est, 2, sd) -colMeans(cch.1.se), 4)
colMeans(cch.2.est)
colMeans(cch.2.est)
colMeans(cch.2.est, na.rm = TRUE)
mybeta <- 0.8789
NSim = 1000
N <- 1000
#type I and type II estimates
cch.1.est <- matrix(ncol = 6, nrow = NSim)
cch.1.se  <- matrix(ncol = 6, nrow = NSim)
cch.1.N <- numeric(NSim)
cch.2.est <- matrix(ncol = 6, nrow = NSim)
cch.2.se  <- matrix(ncol = 6, nrow = NSim)
cohort.est <- matrix(ncol = 6, nrow = NSim)
cohort.se  <- matrix(ncol = 6, nrow = NSim)
setwd(12321)
index = 0
for( i in 1:NSim){
index = index + 1;
#simulate cohorts with 40% censoring, 500 individuals
SimData <- SIM.data.singleMarker(nn = N,
beta = mybeta,
cens.perc = .7)
tmp <- survAM.estimate(time =SimData$xi,
event = SimData$di,
marker = SimData$Y,
predict.time = 2,
cutpoint = 0)
cohort.est[i,] = tmp$estimates
cohort.se[i,]  = tmp$se
#CCH type I
sampleInd <- rep(0, N)
# sample all with observed failure time. (300 individuals)
sampleInd[SimData$di==1] <- 1
#sample 150 more observations from the entire data set without replacement
sampleInd[sample(1:N, 300)] <- 1
sampleProb <- numeric(N)
#all non-censored observations were sampled, so their sample probability is 1
sampleProb[SimData$di==1] <- 1
sampleProb[SimData$di==0] <- 300/N
SimData$weights <- 1/sampleProb
subdat.type1 <- SimData[sampleInd==1,]
#estimate accuracy measures using only the subcohort data
tmp <- survMTP.estimate(time =subdat.type1$xi,
event = subdat.type1$di,
marker = subdat.type1$Y,
weights = subdat.type1$weights,
cohortN = N,
study.design = "Case-Cohort",
predict.time = 2,
cutpoint = 0)
cch.1.est[i,] = tmp$estimates
cch.1.se[i,]  = tmp$se
cch.1.N[i] = sum(sampleInd)
#### Type 2
sampleInd <- rep(0, N)
# sample 100 individuals with observed failure time.
CaseInd <- c(1:N)[SimData$di==1]
sampleInd[sample(CaseInd, 250)] <- 1
# sample 100 individuals with censored failure time.
ControlInd <- c(1:N)[SimData$di==0]
sampleInd[sample(ControlInd, 250)] <- 1
sampleProb <- numeric(500)
#all non-censored observations were sampled
sampleProb[SimData$di==1] <- 250/length(CaseInd)
sampleProb[SimData$di==0] <- 250/length(ControlInd)
SimData$weights2 <- 1/sampleProb
subdat.type2 <- SimData[sampleInd==1,]
#estimate accuracy measures using only the subcohort data
tmp <- survMTP.estimate(time =subdat.type2$xi,
event = subdat.type2$di,
marker = subdat.type2$Y,
weights = subdat.type2$weights2,
cohortN = N,
study.design = "Case-Cohort",
predict.time = 2,
cutpoint = 0)
cch.2.est[i,] = tmp$estimates
cch.2.se[i,]  = tmp$se
print(paste( i))
}
cch.1.est <- as.data.frame(cch.1.est)
names(cch.1.est) <- names(cch.1.se) <- names(cch.2.est) <- names(cch.2.se) <- names(cohort.se) <- names(cohort.est) <- names(tmp$estimates)
## cohort
colMeans(cohort.est)
round(apply(cohort.est, 2, sd) -colMeans(cohort.se), 4)
#type 1
colMeans(cch.1.est)
round(apply(cch.1.est, 2, sd) -colMeans(cch.1.se), 4)
#type 1
colMeans(cch.2.est, na.rm = TRUE)
round(apply(cch.2.est, 2, sd) -colMeans(cch.2.se), 4)
save(cohort.est, cohort.se, cch.1.est, cch.1.se, cch.2.est, cch.2.se,file = "allmeasures_Sim.Rdata")
